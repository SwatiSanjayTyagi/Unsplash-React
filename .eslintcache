[{"C:\\Digikull\\kazam\\src\\index.js":"1","C:\\Digikull\\kazam\\src\\App.js":"2","C:\\Digikull\\kazam\\src\\reportWebVitals.js":"3","C:\\Digikull\\kazam\\src\\components\\searchImage.js":"4","C:\\Digikull\\kazam\\src\\components\\Header.js":"5","C:\\Digikull\\kazam\\src\\components\\ConditionalRender.js":"6","C:\\Digikull\\kazam\\src\\components\\NewSearchImage.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":612,"mtime":1611227840656,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2892,"mtime":1611162575062,"results":"12","hashOfConfig":"9"},{"size":370,"mtime":1611126314289,"results":"13","hashOfConfig":"9"},{"size":1962,"mtime":1611215190462,"results":"14","hashOfConfig":"9"},{"size":2068,"mtime":1611246506325,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1muace0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Digikull\\kazam\\src\\index.js",[],["35","36"],"C:\\Digikull\\kazam\\src\\App.js",["37","38","39","40"],"// import logo from './logo.svg';\nimport React , { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport SearchImage from './components/searchImage';\nimport NewSearchImage from './components/NewSearchImage';\nimport Conditionalrender from './components/ConditionalRender';\nclass App extends Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <NewSearchImage/>\n        {/* <Conditionalrender/> */}\n{/* \n        <Header/>\n        <SearchImage/> */}\n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","C:\\Digikull\\kazam\\src\\reportWebVitals.js",[],"C:\\Digikull\\kazam\\src\\components\\searchImage.js",["41","42","43","44","45","46"],"import React , {useEffect , useState} from 'react';\r\nimport {createApi} from \"unsplash-js\";\r\n\r\n  \r\nfunction SearchImage() {\r\n    // const [querySearch , setquerySearch] = useState('');\r\n    const [querySearch , setquerySearch] = useState({sCriteria: '',\r\n                                                page:'',\r\n                                                perpage:''});\r\n    const [getPhotots, setGetPhotos] =  useState([])\r\n    const [triggerCall, setTriggerCall] = useState(true)\r\n    let imageTag = React.createRef()\r\n\r\n    useEffect(() => {\r\n    const unsplash =  createApi({accessKey: \"HBhFtSYxABc5NhFUnsqdsltWnx4Wy3GzNgoaTXhpewc\"})\r\n\r\n    unsplash.search.getPhotos({ \r\n        query: querySearch.sCriteria,\r\n        page: querySearch.page,\r\n        perPage: querySearch.perpage\r\n    }).then(result => {\r\n        if (result.type === 'success') {\r\n            const firstPhoto = result.response.results.map(item => item.urls.raw);\r\n            setGetPhotos([...getPhotots, firstPhoto]) // getPhotos: [..this.getPhotos, firstPhoto]\r\n          }\r\n        })\r\n    }, [querySearch.page, triggerCall])\r\n    useEffect(() => {\r\n        if(imageTag && imageTag.current && imageTag.current.scrollTop + 1 > imageTag.current.scrollHeight - imageTag.current.clientHeight) {\r\n            setquerySearch(querySearch.page + 1)\r\n        }\r\n    }, [imageTag?.current?.scrollTop])\r\n \r\n    const clickAgain = () => {\r\n       //  console.log(getPhotots, this.imageTag && this.imageTag.current && this.imageTag.current.scrollHeight, this.imageTag.current.scrollTop)\r\n \r\n    }\r\n \r\n    let imageComponent = getPhotots.map(item => <img style={{\r\n        width: '110px',\r\n        height: '110px'\r\n    }} src={item} />)\r\n     // const unsplash = new Unsplash({\r\n    //     accessKey: \"HBhFtSYxABc5NhFUnsqdsltWnx4Wy3GzNgoaTXhpewc\"\r\n    //   });\r\n    // const searchImage = async (e) => {\r\n    //     e.preventDefault();\r\n    //         Unsplash.inputSearch\r\n    //         .photos(sCriteria).page \r\n    //         .then(toJson)\r\n    //         .then((JSON) =>{ console.log(JSON);})\r\n        \r\n    //   };\r\n\r\n\r\n    return(\r\n    <div>\r\n        <form className=\"form\" >\r\n            <input type = 'text' value = {querySearch.sCriteria} placeholder ='Please enter search criteria'\r\n                    onChange={(event)=>{setquerySearch({sCriteria: event.target.value})}} autoFocus/>\r\n            \r\n            <input type = 'text' value = {querySearch.page} placeholder ='Page no:'\r\n                    onChange={(event)=>{setquerySearch({page: event.target.value})}} />\r\n            \r\n            <input type = 'text' value = {querySearch.perpage} placeholder ='No of images per page:'\r\n                    onChange={(event)=>{setquerySearch({perpage: event.target.value})}} />\r\n            <input type = \"button\" value=\"Search\"></input>\r\n        </form>\r\n        \r\n    </div>\r\n)\r\n}\r\n\r\nexport default SearchImage","C:\\Digikull\\kazam\\src\\components\\Header.js",["47"],"import React , { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n    constructor (props) {\r\n        super (props)\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className = 'headerDetails'>\r\n                <h1>Search Images</h1>\r\n                <h6> using unsplash API</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","C:\\Digikull\\kazam\\src\\components\\ConditionalRender.js",["48","49","50","51"],"import React , {useEffect , useState} from 'react';\r\nimport {createApi} from \"unsplash-js\";\r\n \r\nfunction ConditionalRender(props){\r\nconst [getPhotots, setGetPhotos] =  useState([])\r\nconst [querySearch, setQuerySearch] = useState('')\r\nconst [page, setPage] = useState(1)\r\nconst [triggerCall, setTriggerCall] = useState(true)\r\nlet imageTag = React.createRef()\r\n \r\nuseEffect(() => {\r\n// const unsplash = createApi({​​​​​​​​ accessKey:'sHB6uFxO2J5IjTuheN46U7qJ3EZkpZNhvQBIhebtUlc' }​​​​​​​​)\r\nconst unsplash =  createApi({accessKey: \"HBhFtSYxABc5NhFUnsqdsltWnx4Wy3GzNgoaTXhpewc\"})\r\nunsplash.search.getPhotos({\r\n    query: querySearch,\r\n    page:page,\r\n    perPage:10\r\n}).then(result=> {\r\nif (result.type === 'success') {\r\nconst firstPhoto = result.response.results.map(item=>item.urls.raw);\r\nsetGetPhotos( [...getPhotots, firstPhoto]) // getPhotos: [..this.getPhotos, firstPhoto]\r\n        }\r\n    })\r\n},[page, triggerCall])\r\n \r\nuseEffect(() => {\r\nif(imageTag && imageTag.current && imageTag.current.scrollTop + 1 > imageTag.current.scrollHeight - imageTag.current.clientHeight) {\r\nsetPage(page + 1)\r\n}\r\n},[imageTag?.current?.scrollTop])\r\n \r\nconst clickAgain = () => {\r\n//  console.log(getPhotots, this.imageTag && this.imageTag.current && this.imageTag.current.scrollHeight, this.imageTag.current.scrollTop)\r\n \r\n}\r\n \r\nlet imageComponent = getPhotots.map(item => \r\n<img style={{\r\nwidth:'250px',\r\nheight:'250px'\r\n}} src = {item} /> )\r\n \r\nreturn (\r\n        <div>\r\n            <input type=\"text\" onChange={(evt)=> setQuerySearch(evt.target.value)}/>\r\n            <button onClick={()=> {setTriggerCall(!triggerCall)}}>Search</button>\r\n            {/* <button onClick={() => {clickAgain()}}> search </button> */}\r\n            <div style={{height:'600px',\r\n            overflow: 'auto'}} ref={imageTag}>\r\n                {imageComponent}\r\n            </div>\r\n            \r\n        </div>\r\n        )\r\n}\r\n \r\nexport default ConditionalRender\r\n\r\n","C:\\Digikull\\kazam\\src\\components\\NewSearchImage.js",["52","53"],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":14},{"ruleId":"58","severity":1,"message":"62","line":5,"column":8,"nodeType":"60","messageId":"61","endLine":5,"endColumn":19},{"ruleId":"58","severity":1,"message":"63","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":9,"column":3,"nodeType":"66","messageId":"67","endLine":11,"endColumn":4},{"ruleId":"58","severity":1,"message":"68","line":11,"column":25,"nodeType":"60","messageId":"61","endLine":11,"endColumn":39},{"ruleId":"69","severity":1,"message":"70","line":27,"column":8,"nodeType":"71","endLine":27,"endColumn":39,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":32,"column":8,"nodeType":"71","endLine":32,"endColumn":38,"suggestions":"74"},{"ruleId":"58","severity":1,"message":"75","line":34,"column":11,"nodeType":"60","messageId":"61","endLine":34,"endColumn":21},{"ruleId":"58","severity":1,"message":"76","line":39,"column":9,"nodeType":"60","messageId":"61","endLine":39,"endColumn":23},{"ruleId":"77","severity":1,"message":"78","line":39,"column":49,"nodeType":"79","endLine":42,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":4,"column":5,"nodeType":"66","messageId":"67","endLine":6,"endColumn":6},{"ruleId":"69","severity":1,"message":"80","line":24,"column":3,"nodeType":"71","endLine":24,"endColumn":22,"suggestions":"81"},{"ruleId":"69","severity":1,"message":"82","line":30,"column":3,"nodeType":"71","endLine":30,"endColumn":33,"suggestions":"83"},{"ruleId":"58","severity":1,"message":"75","line":32,"column":7,"nodeType":"60","messageId":"61","endLine":32,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":38,"column":1,"nodeType":"79","endLine":41,"endColumn":19},{"ruleId":"58","severity":1,"message":"84","line":4,"column":37,"nodeType":"60","messageId":"61","endLine":4,"endColumn":41},{"ruleId":"58","severity":1,"message":"85","line":10,"column":21,"nodeType":"60","messageId":"61","endLine":10,"endColumn":32},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'SearchImage' is defined but never used.","'Conditionalrender' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'setTriggerCall' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getPhotots', 'querySearch.perpage', and 'querySearch.sCriteria'. Either include them or remove the dependency array. You can also do a functional update 'setGetPhotos(g => ...)' if you only need 'getPhotots' in the 'setGetPhotos' call.","ArrayExpression",["88"],"React Hook useEffect has missing dependencies: 'imageTag' and 'querySearch.page'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setquerySearch' needs the current value of 'querySearch.page'.",["89"],"'clickAgain' is assigned a value but never used.","'imageComponent' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getPhotots' and 'querySearch'. Either include them or remove the dependency array. You can also do a functional update 'setGetPhotos(g => ...)' if you only need 'getPhotots' in the 'setGetPhotos' call.",["90"],"React Hook useEffect has missing dependencies: 'imageTag' and 'page'. Either include them or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.",["91"],"'Form' is defined but never used.","'setclientid' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [getPhotots, querySearch.page, querySearch.perpage, querySearch.sCriteria, triggerCall]",{"range":"100","text":"101"},"Update the dependencies array to be: [imageTag, imageTag.current.scrollTop, querySearch.page]",{"range":"102","text":"103"},"Update the dependencies array to be: [getPhotots, page, querySearch, triggerCall]",{"range":"104","text":"105"},"Update the dependencies array to be: [imageTag, imageTag.current.scrollTop, page]",{"range":"106","text":"107"},[1073,1104],"[getPhotots, querySearch.page, querySearch.perpage, querySearch.sCriteria, triggerCall]",[1340,1370],"[imageTag, imageTag.current.scrollTop, querySearch.page]",[898,917],"[getPhotots, page, querySearch, triggerCall]",[1100,1130],"[imageTag, imageTag.current.scrollTop, page]"]